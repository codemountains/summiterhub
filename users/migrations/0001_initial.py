# Generated by Django 3.1.2 on 2020-10-17 14:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_user_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('profile_name', models.CharField(max_length=100)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=users.models.upload_path)),
                ('name', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=8)),
                ('prefecture', models.IntegerField(choices=[(1, '北海道'), (2, '青森県'), (3, '岩手県'), (4, '宮城県'), (5, '秋田県'), (6, '山形県'), (7, '福島県'), (8, '茨城県'), (9, '栃木県'), (10, '群馬県'), (11, '埼玉県'), (12, '千葉県'), (13, '東京都'), (14, '神奈川県'), (15, '新潟県'), (16, '富山県'), (17, '石川県'), (18, '福井県'), (19, '山梨県'), (20, '長野県'), (21, '岐阜県'), (22, '静岡県'), (23, '愛知県'), (24, '三重県'), (25, '滋賀県'), (26, '京都府'), (27, '大阪府'), (28, '兵庫県'), (29, '奈良県'), (30, '和歌山県'), (31, '鳥取県'), (32, '島根県'), (33, '岡山県'), (34, '広島県'), (35, '山口県'), (36, '徳島県'), (37, '香川県'), (38, '愛媛県'), (39, '高知県'), (40, '福岡県'), (41, '佐賀県'), (42, '長崎県'), (43, '熊本県'), (44, '大分県'), (45, '宮崎県'), (46, '鹿児島県'), (47, '沖縄県')])),
                ('address', models.CharField(max_length=200)),
                ('gender_type', models.IntegerField(choices=[(1, '男性'), (2, '女性'), (3, '無回答')])),
                ('blood_type', models.IntegerField(choices=[(1, 'A'), (2, 'B'), (3, 'O'), (4, 'AB')])),
                ('home_phone_number', models.CharField(blank=True, max_length=13, null=True)),
                ('cell_phone_number', models.CharField(blank=True, max_length=13, null=True)),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_phone', models.CharField(max_length=13)),
                ('emergency_contact_email', models.CharField(blank=True, max_length=100, null=True)),
                ('insurance_name', models.CharField(blank=True, max_length=100, null=True)),
                ('insurance_number', models.CharField(blank=True, max_length=100, null=True)),
                ('hitococo_id', models.CharField(blank=True, max_length=50, null=True)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_detail_user_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PartyMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_index', models.IntegerField()),
                ('entry_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_member_entry_user_id', to=settings.AUTH_USER_MODEL)),
                ('party_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_member_party_id', to='users.party')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_member_user_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('approval_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_approval_user_id', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_user_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('message', models.TextField()),
                ('is_approved', models.BooleanField(default=False)),
                ('dest_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_request_dest_user_id', to=settings.AUTH_USER_MODEL)),
                ('src_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_request_src_user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('src_user_id', 'dest_user_id')},
            },
        ),
        migrations.CreateModel(
            name='BlockingFriend',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('dest_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocking_friend_dest_user_id', to=settings.AUTH_USER_MODEL)),
                ('src_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocking_friend_src_user_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('src_user_id', 'dest_user_id')},
            },
        ),
    ]
